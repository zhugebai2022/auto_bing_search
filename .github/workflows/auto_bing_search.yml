name: AutoBing Search

on:
  workflow_dispatch:
  #schedule:
    #- cron: '0 0,12 * * *'

jobs:
  automate-bing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq unzip

    - name: Install Microsoft Edge
      run: |
        curl -sSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
        sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
        echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" | sudo tee /etc/apt/sources.list.d/microsoft-edge.list
        sudo apt-get update
        sudo apt-get install -y microsoft-edge-stable

    - name: Install EdgeDriver
      run: |
        # 获取Edge浏览器版本（修复空字节问题）
        EDGE_FULL_VERSION=$(/usr/bin/microsoft-edge --version 2>&1 | tr -d '\0')
        EDGE_VERSION=$(echo "$EDGE_FULL_VERSION" | awk '{match($0, /[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/); print substr($0, RSTART, RLENGTH)}')
        echo "提取的Edge版本号: $EDGE_VERSION"
    
        # 获取主版本号（如123）
        EDGE_MAJOR_VERSION=$(echo "$EDGE_VERSION" | cut -d. -f1)
        echo "主版本号: $EDGE_MAJOR_VERSION"
    
        # 获取对应Driver版本
        DRIVER_VERSION=$(curl -s "https://msedgedriver.azureedge.net/LATEST_RELEASE_$EDGE_MAJOR_VERSION")
        echo "匹配的Driver版本: $DRIVER_VERSION"
    
        # 下载并安装
        wget -q "https://msedgedriver.azureedge.net/$DRIVER_VERSION/edgedriver_linux64.zip"
        unzip -o edgedriver_linux64.zip
        sudo mv msedgedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/msedgedriver

    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install selenium

    - name: Run Bing automation
      run: |
        echo "当前工作目录: $(pwd)"
        echo "文件列表:"
        ls -la
        python auto_bing_search.py

    - name: Upload log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: console-log
        path: autobing-log.txt
